name: build-openwrt-visionfive

on:
  workflow_dispatch:
  repository_dispatch:
# release:
#   types: published
# push:
#   branches:
#     - master
#   paths:
#     - 'Lean'
   schedule:
     - cron: 0 18 * * *
#   watch:
#     types: started
  
env:
  REPO_URL: https://git.openwrt.org/openwrt/staging/wigyori.git
  REPO_BRANCH: riscv-visionfive-202301
  FEEDS_CONF: feeds.conf.default
  CONFIG_FILE: .config
  SSH_ACTIONS:  false
  UPLOAD_BIN_DIR: false
  UPLOAD_FIRMWARE: true
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-latest
    if: github.event.repository.owner.id == github.event.sender.id

    steps:
    - name: Checkout
      uses: actions/checkout@master

    - name: 初始环境
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
          sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
          sudo -E apt-get update
          sudo -E apt-get -y install build-essential clang flex bison g++ gawk gcc-multilib g++-multilib gettext git libncurses-dev libssl-dev python3-distutils rsync unzip zlib1g-dev file wget
          sudo -E apt-get -y autoremove --purge
          sudo -E apt-get clean
          sudo timedatectl set-timezone "$TZ" 
          
          echo "========================================"
          echo "[Space Usage]:"
          echo "========================================"
          df -hT
          echo "========================================"
          echo "[File List]:" 
          echo "========================================"
          echo "Current Path:" $PWD
          ls -l -A
          echo "========================================"
        
    - name: 下载源码
      run: git clone --depth 1 $REPO_URL -b $REPO_BRANCH openwrt && [ -e $FEEDS_CONF ] && mv $FEEDS_CONF openwrt/feeds.conf.default && cd openwrt && curl -o include/openssl-module.mk https://raw.githubusercontent.com/openwrt/openwrt/master/include/openssl-module.mk && ./scripts/feeds clean && ./scripts/feeds update -a && ./scripts/feeds install -a
   
    - name: 导入自定义
      run: |
        [ -e files ] && mv files openwrt/files
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config

    - name: SSH连接
      uses: sypopo/debugger-action@master
      if: env.SSH_ACTIONS == 'true'
        
    - name: 下载软件包
      id: package
      run: |
        cd openwrt && make defconfig && make download -j8
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;
        
    - name: 固件编译
      id: compile
      run: |
        cd openwrt
        echo -e "$(nproc) thread compile"
        make -j$(nproc) || make -j1 V=s
        echo "::set-output name=status::success"
        echo "======================="
        echo "Space usage:"
        echo "======================="
        df -h
        echo "======================="
        du -h --max-depth=1 ./ --exclude=build_dir --exclude=bin
        du -h --max-depth=1 ./build_dir
        du -h --max-depth=1 ./bin
        cp -f .config ./bin/targets/visionfive/generic/
        
    - name: 上传bin
      uses: actions/upload-artifact@master
      if: steps.compile.outputs.status == 'success' && env.UPLOAD_BIN_DIR == 'true'
      with:
        name: OpenWrt_visionfive
        path: openwrt/bin

    - name: 固件打包
      id: organize
      if: env.UPLOAD_FIRMWARE == 'true' && !cancelled()
      run: |
        cp openwrt/.config  openwrt/bin/targets/visionfive/generic/config.txt
        tar -czf bin.tar.gz openwrt/bin && cp -vf bin.tar.gz openwrt/bin/targets/visionfive/generic
        cd openwrt/bin/targets/visionfive/generic
        rm -rf packages *rootfs* *vmlinuz *info *fest
        echo "FIRMWARE=$PWD" >> $GITHUB_ENV
        echo "::set-output name=status::success"

    - name: 上传固件
      uses: actions/upload-artifact@master
      if: steps.organize.outputs.status == 'success' && !cancelled()
      with:
        name: OpenWrt-visionfive
        path: ${{ env.FIRMWARE }}
